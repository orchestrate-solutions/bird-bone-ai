[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bird-bone-ai"
version = "0.1.0"
description = "Biologically-inspired neural compression research project"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Bird-Bone AI Team"}
]
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "torch>=2.4.0,<2.5.0",
    "transformers>=4.44.0,<5.0.0",
    "accelerate>=0.33.0,<1.0.0",
    "numpy>=1.24.0,<2.0.0",
    "scipy>=1.11.0,<2.0.0",
    "dvc>=3.51.0,<4.0.0",
    "wandb>=0.17.0,<1.0.0",
    "pyyaml>=6.0.0,<7.0.0",
    "tqdm>=4.66.0,<5.0.0",
    "rich>=13.7.0,<14.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.0,<9.0.0",
    "pytest-xdist>=3.3.0,<4.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.11.0,<4.0.0",
    "black>=24.4.0,<25.0.0",
    "ruff>=0.5.0,<1.0.0",
    "mypy>=1.10.0,<2.0.0",
    "pre-commit>=3.7.0,<4.0.0",
    "safety>=3.2.0,<4.0.0",
    "bandit>=1.7.0,<2.0.0",
    "flake8>=7.0.0,<8.0.0",
    "coverage>=7.5.0,<8.0.0",
]
ci = [
    "safety>=3.2.0,<4.0.0",
    "bandit>=1.7.0,<2.0.0",
    "flake8>=7.0.0,<8.0.0",
    "coverage>=7.5.0,<8.0.0",
    "GitPython>=3.1.43,<4.0.0",
    "psutil>=5.9.0,<6.0.0",
    "requests>=2.32.0,<3.0.0",
    "tomli>=2.0.0,<3.0.0",
    "pyyaml>=6.0.0,<7.0.0",
]
jupyter = [
    "jupyterlab>=4.2.0,<5.0.0",
    "nbdime>=4.0.0,<5.0.0",
    "ipywidgets>=8.1.0,<9.0.0",
    "jupyterlab-git>=0.50.0,<1.0.0",
]
gpu = [
    "bitsandbytes>=0.41.0,<1.0.0",
    "auto-gptq>=0.7.0,<1.0.0",
    "peft>=0.12.0,<1.0.0",
]

[project.urls]
Homepage = "https://github.com/joshuawink/bird-bone-ai"
Repository = "https://github.com/joshuawink/bird-bone-ai"
Documentation = "https://github.com/joshuawink/bird-bone-ai/blob/main/README.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["scripts*", "tests*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=scripts",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["scripts"]
omit = [
    "*/__pycache__/*",
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "scripts/*/test_*"]
skips = ["B101", "B601"]

[t